
//----------------------------------------------------
// The following code was generated by CUP v0.10k
// Wed Feb 25 14:10:20 EST 2015
//----------------------------------------------------

import java.io.*;

/** CUP v0.10k generated parser.
  * @version Wed Feb 25 14:10:20 EST 2015
  */
public class A3Parser extends java_cup.runtime.lr_parser {

  /** Default constructor. */
  public A3Parser() {super();}

  /** Constructor which sets the default scanner. */
  public A3Parser(java_cup.runtime.Scanner s) {super(s);}

  /** Production table. */
  protected static final short _production_table[][] = 
    unpackFromStrings(new String[] {
    "\000\055\000\002\003\003\000\002\002\004\000\002\003" +
    "\004\000\002\004\003\000\002\004\003\000\002\004\003" +
    "\000\002\005\011\000\002\005\010\000\002\025\002\000" +
    "\002\025\003\000\002\007\003\000\002\007\005\000\002" +
    "\006\004\000\002\010\005\000\002\010\006\000\002\012" +
    "\003\000\002\012\004\000\002\011\003\000\002\011\003" +
    "\000\002\011\003\000\002\011\003\000\002\011\003\000" +
    "\002\011\003\000\002\011\003\000\002\011\003\000\002" +
    "\011\003\000\002\027\004\000\002\013\005\000\002\013" +
    "\004\000\002\014\006\000\002\014\006\000\002\015\005" +
    "\000\002\016\007\000\002\017\011\000\002\020\011\000" +
    "\002\021\006\000\002\022\003\000\002\022\003\000\002" +
    "\022\006\000\002\023\005\000\002\023\005\000\002\026" +
    "\002\000\002\026\003\000\002\024\005\000\002\024\007" +
    "" });

  /** Access to production table. */
  public short[][] production_table() {return _production_table;}

  /** Parse-action table. */
  protected static final short[][] _action_table = 
    unpackFromStrings(new String[] {
    "\000\141\000\010\015\006\016\011\017\007\001\002\000" +
    "\004\002\143\001\002\000\006\014\014\030\013\001\002" +
    "\000\006\014\ufffc\030\ufffc\001\002\000\006\014\ufffd\030" +
    "\ufffd\001\002\000\012\002\001\015\006\016\011\017\007" +
    "\001\002\000\006\014\ufffe\030\ufffe\001\002\000\004\002" +
    "\uffff\001\002\000\004\024\137\001\002\000\004\030\015" +
    "\001\002\000\004\024\016\001\002\000\012\015\006\016" +
    "\011\017\007\023\ufff9\001\002\000\004\030\136\001\002" +
    "\000\006\020\134\023\ufff7\001\002\000\004\023\023\001" +
    "\002\000\004\023\ufff8\001\002\000\004\012\025\001\002" +
    "\000\012\002\ufffb\015\ufffb\016\ufffb\017\ufffb\001\002\000" +
    "\030\005\037\006\033\007\036\010\030\011\035\012\025" +
    "\015\006\016\011\017\007\030\040\031\043\001\002\000" +
    "\032\005\uffed\006\uffed\007\uffed\010\uffed\011\uffed\012\uffed" +
    "\013\uffed\015\uffed\016\uffed\017\uffed\030\uffed\031\uffed\001" +
    "\002\000\032\005\uffe8\006\uffe8\007\uffe8\010\uffe8\011\uffe8" +
    "\012\uffe8\013\uffe8\015\uffe8\016\uffe8\017\uffe8\030\uffe8\031" +
    "\uffe8\001\002\000\030\005\037\006\033\007\036\010\030" +
    "\011\035\012\025\015\006\016\011\017\007\030\040\031" +
    "\043\001\002\000\032\005\uffef\006\uffef\007\uffef\010\uffef" +
    "\011\uffef\012\uffef\013\uffef\015\uffef\016\uffef\017\uffef\030" +
    "\uffef\031\uffef\001\002\000\032\005\uffea\006\uffea\007\uffea" +
    "\010\uffea\011\uffea\012\uffea\013\uffea\015\uffea\016\uffea\017" +
    "\uffea\030\uffea\031\uffea\001\002\000\004\024\125\001\002" +
    "\000\032\005\uffee\006\uffee\007\uffee\010\uffee\011\uffee\012" +
    "\uffee\013\uffee\015\uffee\016\uffee\017\uffee\030\uffee\031\uffee" +
    "\001\002\000\006\030\057\031\043\001\002\000\004\024" +
    "\112\001\002\000\004\024\104\001\002\000\010\022\uffdc" +
    "\024\062\027\077\001\002\000\004\030\074\001\002\000" +
    "\004\022\056\001\002\000\044\005\uffdd\006\uffdd\007\uffdd" +
    "\010\uffdd\011\uffdd\012\uffdd\015\uffdd\016\uffdd\017\uffdd\020" +
    "\uffdd\021\uffdd\022\uffdd\023\uffdd\025\uffdd\026\uffdd\030\uffdd" +
    "\031\uffdd\001\002\000\032\005\ufff0\006\ufff0\007\ufff0\010" +
    "\ufff0\011\ufff0\012\ufff0\013\ufff0\015\ufff0\016\ufff0\017\ufff0" +
    "\030\ufff0\031\ufff0\001\002\000\032\005\uffeb\006\uffeb\007" +
    "\uffeb\010\uffeb\011\uffeb\012\uffeb\013\uffeb\015\uffeb\016\uffeb" +
    "\017\uffeb\030\uffeb\031\uffeb\001\002\000\032\005\037\006" +
    "\033\007\036\010\030\011\035\012\025\013\052\015\006" +
    "\016\011\017\007\030\040\031\043\001\002\000\032\005" +
    "\uffec\006\uffec\007\uffec\010\uffec\011\uffec\012\uffec\013\uffec" +
    "\015\uffec\016\uffec\017\uffec\030\uffec\031\uffec\001\002\000" +
    "\032\005\uffe9\006\uffe9\007\uffe9\010\uffe9\011\uffe9\012\uffe9" +
    "\013\uffe9\015\uffe9\016\uffe9\017\uffe9\030\uffe9\031\uffe9\001" +
    "\002\000\004\013\055\001\002\000\034\002\ufff4\005\ufff4" +
    "\006\ufff4\007\ufff4\010\ufff4\011\ufff4\012\ufff4\013\ufff4\015" +
    "\ufff4\016\ufff4\017\ufff4\030\ufff4\031\ufff4\001\002\000\032" +
    "\005\037\006\033\007\036\010\030\011\035\012\025\013" +
    "\ufff2\015\006\016\011\017\007\030\040\031\043\001\002" +
    "\000\004\013\ufff1\001\002\000\034\002\ufff3\005\ufff3\006" +
    "\ufff3\007\ufff3\010\ufff3\011\ufff3\012\ufff3\013\ufff3\015\ufff3" +
    "\016\ufff3\017\ufff3\030\ufff3\031\ufff3\001\002\000\006\030" +
    "\057\031\043\001\002\000\044\005\uffdc\006\uffdc\007\uffdc" +
    "\010\uffdc\011\uffdc\012\uffdc\015\uffdc\016\uffdc\017\uffdc\020" +
    "\uffdc\021\uffdc\023\uffdc\024\062\025\uffdc\026\uffdc\030\uffdc" +
    "\031\uffdc\001\002\000\030\005\037\006\033\007\036\010" +
    "\030\011\035\012\025\015\006\016\011\017\007\030\040" +
    "\031\043\001\002\000\032\005\uffde\006\uffde\007\uffde\010" +
    "\uffde\011\uffde\012\uffde\013\uffde\015\uffde\016\uffde\017\uffde" +
    "\030\uffde\031\uffde\001\002\000\006\023\uffd8\024\064\001" +
    "\002\000\004\023\073\001\002\000\006\030\057\031\043" +
    "\001\002\000\004\023\uffd7\001\002\000\006\020\067\023" +
    "\070\001\002\000\006\030\057\031\043\001\002\000\004" +
    "\023\uffd6\001\002\000\004\023\072\001\002\000\004\023" +
    "\uffd5\001\002\000\044\005\uffdb\006\uffdb\007\uffdb\010\uffdb" +
    "\011\uffdb\012\uffdb\015\uffdb\016\uffdb\017\uffdb\020\uffdb\021" +
    "\uffdb\022\uffdb\023\uffdb\025\uffdb\026\uffdb\030\uffdb\031\uffdb" +
    "\001\002\000\006\021\076\027\077\001\002\000\032\005" +
    "\uffe5\006\uffe5\007\uffe5\010\uffe5\011\uffe5\012\uffe5\013\uffe5" +
    "\015\uffe5\016\uffe5\017\uffe5\030\uffe5\031\uffe5\001\002\000" +
    "\032\005\uffe6\006\uffe6\007\uffe6\010\uffe6\011\uffe6\012\uffe6" +
    "\013\uffe6\015\uffe6\016\uffe6\017\uffe6\030\uffe6\031\uffe6\001" +
    "\002\000\010\004\100\030\057\031\043\001\002\000\004" +
    "\021\103\001\002\000\004\021\102\001\002\000\032\005" +
    "\uffe4\006\uffe4\007\uffe4\010\uffe4\011\uffe4\012\uffe4\013\uffe4" +
    "\015\uffe4\016\uffe4\017\uffe4\030\uffe4\031\uffe4\001\002\000" +
    "\032\005\uffe3\006\uffe3\007\uffe3\010\uffe3\011\uffe3\012\uffe3" +
    "\013\uffe3\015\uffe3\016\uffe3\017\uffe3\030\uffe3\031\uffe3\001" +
    "\002\000\006\030\057\031\043\001\002\000\004\020\106" +
    "\001\002\000\004\004\107\001\002\000\004\023\110\001" +
    "\002\000\004\021\111\001\002\000\032\005\uffe0\006\uffe0" +
    "\007\uffe0\010\uffe0\011\uffe0\012\uffe0\013\uffe0\015\uffe0\016" +
    "\uffe0\017\uffe0\030\uffe0\031\uffe0\001\002\000\006\030\057" +
    "\031\043\001\002\000\006\025\117\026\120\001\002\000" +
    "\004\023\115\001\002\000\030\005\037\006\033\007\036" +
    "\010\030\011\035\012\025\015\006\016\011\017\007\030" +
    "\040\031\043\001\002\000\032\005\uffe1\006\uffe1\007\uffe1" +
    "\010\uffe1\011\uffe1\012\uffe1\013\uffe1\015\uffe1\016\uffe1\017" +
    "\uffe1\030\uffe1\031\uffe1\001\002\000\006\030\057\031\043" +
    "\001\002\000\006\030\057\031\043\001\002\000\004\023" +
    "\uffd9\001\002\000\004\023\uffda\001\002\000\004\021\124" +
    "\001\002\000\032\005\uffe2\006\uffe2\007\uffe2\010\uffe2\011" +
    "\uffe2\012\uffe2\013\uffe2\015\uffe2\016\uffe2\017\uffe2\030\uffe2" +
    "\031\uffe2\001\002\000\004\030\126\001\002\000\004\020" +
    "\127\001\002\000\004\004\130\001\002\000\004\023\131" +
    "\001\002\000\004\021\132\001\002\000\032\005\uffdf\006" +
    "\uffdf\007\uffdf\010\uffdf\011\uffdf\012\uffdf\013\uffdf\015\uffdf" +
    "\016\uffdf\017\uffdf\030\uffdf\031\uffdf\001\002\000\032\005" +
    "\uffe7\006\uffe7\007\uffe7\010\uffe7\011\uffe7\012\uffe7\013\uffe7" +
    "\015\uffe7\016\uffe7\017\uffe7\030\uffe7\031\uffe7\001\002\000" +
    "\010\015\006\016\011\017\007\001\002\000\004\023\ufff6" +
    "\001\002\000\006\020\ufff5\023\ufff5\001\002\000\012\015" +
    "\006\016\011\017\007\023\ufff9\001\002\000\004\023\141" +
    "\001\002\000\004\012\025\001\002\000\012\002\ufffa\015" +
    "\ufffa\016\ufffa\017\ufffa\001\002\000\004\002\000\001\002" +
    "" });

  /** Access to parse-action table. */
  public short[][] action_table() {return _action_table;}

  /** <code>reduce_goto</code> table. */
  protected static final short[][] _reduce_table = 
    unpackFromStrings(new String[] {
    "\000\141\000\010\003\003\004\004\005\007\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\010\003\011\004\004\005\007\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\012\004\016\006\017\007" +
    "\021\025\020\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\010\023\001" +
    "\001\000\002\001\001\000\032\004\040\010\043\011\045" +
    "\013\030\014\033\015\025\016\046\017\044\020\031\021" +
    "\047\022\041\027\026\001\001\000\002\001\001\000\002" +
    "\001\001\000\032\004\040\010\043\011\132\013\030\014" +
    "\033\015\025\016\046\017\044\020\031\021\047\022\041" +
    "\027\026\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\022\122\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\014\074\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\034\004\040\010" +
    "\043\011\052\012\050\013\030\014\033\015\025\016\046" +
    "\017\044\020\031\021\047\022\041\027\026\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\034\004\040\010\043\011\052\012\053\013" +
    "\030\014\033\015\025\016\046\017\044\020\031\021\047" +
    "\022\041\027\026\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\022\057\001\001\000\002\001\001\000\032" +
    "\004\040\010\043\011\060\013\030\014\033\015\025\016" +
    "\046\017\044\020\031\021\047\022\041\027\026\001\001" +
    "\000\002\001\001\000\006\024\064\026\062\001\001\000" +
    "\002\001\001\000\004\022\065\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\022\070\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\022\100\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\022\104\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\006\022\112\023" +
    "\113\001\001\000\002\001\001\000\002\001\001\000\032" +
    "\004\040\010\043\011\115\013\030\014\033\015\025\016" +
    "\046\017\044\020\031\021\047\022\041\027\026\001\001" +
    "\000\002\001\001\000\004\022\121\001\001\000\004\022" +
    "\120\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\010\004\016\006" +
    "\017\007\134\001\001\000\002\001\001\000\002\001\001" +
    "\000\012\004\016\006\017\007\021\025\137\001\001\000" +
    "\002\001\001\000\004\010\141\001\001\000\002\001\001" +
    "\000\002\001\001" });

  /** Access to <code>reduce_goto</code> table. */
  public short[][] reduce_table() {return _reduce_table;}

  /** Instance of action encapsulation class. */
  protected CUP$A3Parser$actions action_obj;

  /** Action encapsulation object initializer. */
  protected void init_actions()
    {
      action_obj = new CUP$A3Parser$actions(this);
    }

  /** Invoke a user supplied parse action. */
  public java_cup.runtime.Symbol do_action(
    int                        act_num,
    java_cup.runtime.lr_parser parser,
    java.util.Stack            stack,
    int                        top)
    throws java.lang.Exception
  {
    /* call code in generated class */
    return action_obj.CUP$A3Parser$do_action(act_num, parser, stack, top);
  }

  /** Indicates start state. */
  public int start_state() {return 0;}
  /** Indicates start production. */
  public int start_production() {return 1;}

  /** <code>EOF</code> Symbol index. */
  public int EOF_sym() {return 0;}

  /** <code>error</code> Symbol index. */
  public int error_sym() {return 1;}

}

/** Cup generated class to encapsulate user supplied action code.*/
class CUP$A3Parser$actions {
  private final A3Parser parser;

  /** Constructor */
  CUP$A3Parser$actions(A3Parser parser) {
    this.parser = parser;
  }

  /** Method with the actual generated action code. */
  public final java_cup.runtime.Symbol CUP$A3Parser$do_action(
    int                        CUP$A3Parser$act_num,
    java_cup.runtime.lr_parser CUP$A3Parser$parser,
    java.util.Stack            CUP$A3Parser$stack,
    int                        CUP$A3Parser$top)
    throws java.lang.Exception
    {
      /* Symbol object for return from actions */
      java_cup.runtime.Symbol CUP$A3Parser$result;

      /* select the action based on the action number */
      switch (CUP$A3Parser$act_num)
        {
          /*. . . . . . . . . . . . . . . . . . . .*/
          case 44: // ActualParams ::= LBRACK PrimaryExpr COMMA PrimaryExpr RBRACK 
            {
              Object RESULT = null;

              CUP$A3Parser$result = new java_cup.runtime.Symbol(18/*ActualParams*/, ((java_cup.runtime.Symbol)CUP$A3Parser$stack.elementAt(CUP$A3Parser$top-4)).left, ((java_cup.runtime.Symbol)CUP$A3Parser$stack.elementAt(CUP$A3Parser$top-0)).right, RESULT);
            }
          return CUP$A3Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 43: // ActualParams ::= LBRACK PrimaryExpr RBRACK 
            {
              Object RESULT = null;

              CUP$A3Parser$result = new java_cup.runtime.Symbol(18/*ActualParams*/, ((java_cup.runtime.Symbol)CUP$A3Parser$stack.elementAt(CUP$A3Parser$top-2)).left, ((java_cup.runtime.Symbol)CUP$A3Parser$stack.elementAt(CUP$A3Parser$top-0)).right, RESULT);
            }
          return CUP$A3Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 42: // Ap ::= ActualParams 
            {
              Object RESULT = null;

              CUP$A3Parser$result = new java_cup.runtime.Symbol(20/*Ap*/, ((java_cup.runtime.Symbol)CUP$A3Parser$stack.elementAt(CUP$A3Parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$A3Parser$stack.elementAt(CUP$A3Parser$top-0)).right, RESULT);
            }
          return CUP$A3Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 41: // Ap ::= 
            {
              Object RESULT = null;

              CUP$A3Parser$result = new java_cup.runtime.Symbol(20/*Ap*/, ((java_cup.runtime.Symbol)CUP$A3Parser$stack.elementAt(CUP$A3Parser$top-0)).right, ((java_cup.runtime.Symbol)CUP$A3Parser$stack.elementAt(CUP$A3Parser$top-0)).right, RESULT);
            }
          return CUP$A3Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 40: // BoolExpression ::= PrimaryExpr NEQUALS PrimaryExpr 
            {
              Object RESULT = null;

              CUP$A3Parser$result = new java_cup.runtime.Symbol(17/*BoolExpression*/, ((java_cup.runtime.Symbol)CUP$A3Parser$stack.elementAt(CUP$A3Parser$top-2)).left, ((java_cup.runtime.Symbol)CUP$A3Parser$stack.elementAt(CUP$A3Parser$top-0)).right, RESULT);
            }
          return CUP$A3Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 39: // BoolExpression ::= PrimaryExpr EQUALS PrimaryExpr 
            {
              Object RESULT = null;

              CUP$A3Parser$result = new java_cup.runtime.Symbol(17/*BoolExpression*/, ((java_cup.runtime.Symbol)CUP$A3Parser$stack.elementAt(CUP$A3Parser$top-2)).left, ((java_cup.runtime.Symbol)CUP$A3Parser$stack.elementAt(CUP$A3Parser$top-0)).right, RESULT);
            }
          return CUP$A3Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 38: // PrimaryExpr ::= ID LBRACK Ap RBRACK 
            {
              Object RESULT = null;

              CUP$A3Parser$result = new java_cup.runtime.Symbol(16/*PrimaryExpr*/, ((java_cup.runtime.Symbol)CUP$A3Parser$stack.elementAt(CUP$A3Parser$top-3)).left, ((java_cup.runtime.Symbol)CUP$A3Parser$stack.elementAt(CUP$A3Parser$top-0)).right, RESULT);
            }
          return CUP$A3Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 37: // PrimaryExpr ::= ID 
            {
              Object RESULT = null;

              CUP$A3Parser$result = new java_cup.runtime.Symbol(16/*PrimaryExpr*/, ((java_cup.runtime.Symbol)CUP$A3Parser$stack.elementAt(CUP$A3Parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$A3Parser$stack.elementAt(CUP$A3Parser$top-0)).right, RESULT);
            }
          return CUP$A3Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 36: // PrimaryExpr ::= NUMBER 
            {
              Object RESULT = null;

              CUP$A3Parser$result = new java_cup.runtime.Symbol(16/*PrimaryExpr*/, ((java_cup.runtime.Symbol)CUP$A3Parser$stack.elementAt(CUP$A3Parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$A3Parser$stack.elementAt(CUP$A3Parser$top-0)).right, RESULT);
            }
          return CUP$A3Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 35: // Expression ::= PrimaryExpr MULT PrimaryExpr Statement 
            {
              Object RESULT = null;

              CUP$A3Parser$result = new java_cup.runtime.Symbol(15/*Expression*/, ((java_cup.runtime.Symbol)CUP$A3Parser$stack.elementAt(CUP$A3Parser$top-3)).left, ((java_cup.runtime.Symbol)CUP$A3Parser$stack.elementAt(CUP$A3Parser$top-0)).right, RESULT);
            }
          return CUP$A3Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 34: // ReadStmt ::= READING LBRACK ID COMMA QUOTEDSTRING RBRACK SEMICOLON 
            {
              Object RESULT = null;

              CUP$A3Parser$result = new java_cup.runtime.Symbol(14/*ReadStmt*/, ((java_cup.runtime.Symbol)CUP$A3Parser$stack.elementAt(CUP$A3Parser$top-6)).left, ((java_cup.runtime.Symbol)CUP$A3Parser$stack.elementAt(CUP$A3Parser$top-0)).right, RESULT);
            }
          return CUP$A3Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 33: // WriteStmt ::= WRITE LBRACK PrimaryExpr COMMA QUOTEDSTRING RBRACK SEMICOLON 
            {
              Object RESULT = null;

              CUP$A3Parser$result = new java_cup.runtime.Symbol(13/*WriteStmt*/, ((java_cup.runtime.Symbol)CUP$A3Parser$stack.elementAt(CUP$A3Parser$top-6)).left, ((java_cup.runtime.Symbol)CUP$A3Parser$stack.elementAt(CUP$A3Parser$top-0)).right, RESULT);
            }
          return CUP$A3Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 32: // IfStmt ::= IF LBRACK BoolExpression RBRACK Statement 
            {
              Object RESULT = null;

              CUP$A3Parser$result = new java_cup.runtime.Symbol(12/*IfStmt*/, ((java_cup.runtime.Symbol)CUP$A3Parser$stack.elementAt(CUP$A3Parser$top-4)).left, ((java_cup.runtime.Symbol)CUP$A3Parser$stack.elementAt(CUP$A3Parser$top-0)).right, RESULT);
            }
          return CUP$A3Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 31: // ReturnStmt ::= RETURN PrimaryExpr SEMICOLON 
            {
              Object RESULT = null;

              CUP$A3Parser$result = new java_cup.runtime.Symbol(11/*ReturnStmt*/, ((java_cup.runtime.Symbol)CUP$A3Parser$stack.elementAt(CUP$A3Parser$top-2)).left, ((java_cup.runtime.Symbol)CUP$A3Parser$stack.elementAt(CUP$A3Parser$top-0)).right, RESULT);
            }
          return CUP$A3Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 30: // AssignStmt ::= ID ISE QUOTEDSTRING SEMICOLON 
            {
              Object RESULT = null;

              CUP$A3Parser$result = new java_cup.runtime.Symbol(10/*AssignStmt*/, ((java_cup.runtime.Symbol)CUP$A3Parser$stack.elementAt(CUP$A3Parser$top-3)).left, ((java_cup.runtime.Symbol)CUP$A3Parser$stack.elementAt(CUP$A3Parser$top-0)).right, RESULT);
            }
          return CUP$A3Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 29: // AssignStmt ::= ID ISE PrimaryExpr SEMICOLON 
            {
              Object RESULT = null;

              CUP$A3Parser$result = new java_cup.runtime.Symbol(10/*AssignStmt*/, ((java_cup.runtime.Symbol)CUP$A3Parser$stack.elementAt(CUP$A3Parser$top-3)).left, ((java_cup.runtime.Symbol)CUP$A3Parser$stack.elementAt(CUP$A3Parser$top-0)).right, RESULT);
            }
          return CUP$A3Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 28: // LocalVarDecl ::= Type AssignStmt 
            {
              Object RESULT = null;

              CUP$A3Parser$result = new java_cup.runtime.Symbol(9/*LocalVarDecl*/, ((java_cup.runtime.Symbol)CUP$A3Parser$stack.elementAt(CUP$A3Parser$top-1)).left, ((java_cup.runtime.Symbol)CUP$A3Parser$stack.elementAt(CUP$A3Parser$top-0)).right, RESULT);
            }
          return CUP$A3Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 27: // LocalVarDecl ::= Type ID SEMICOLON 
            {
              Object RESULT = null;

              CUP$A3Parser$result = new java_cup.runtime.Symbol(9/*LocalVarDecl*/, ((java_cup.runtime.Symbol)CUP$A3Parser$stack.elementAt(CUP$A3Parser$top-2)).left, ((java_cup.runtime.Symbol)CUP$A3Parser$stack.elementAt(CUP$A3Parser$top-0)).right, RESULT);
            }
          return CUP$A3Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 26: // ElseStmt ::= ELSE Statement 
            {
              Object RESULT = null;

              CUP$A3Parser$result = new java_cup.runtime.Symbol(21/*ElseStmt*/, ((java_cup.runtime.Symbol)CUP$A3Parser$stack.elementAt(CUP$A3Parser$top-1)).left, ((java_cup.runtime.Symbol)CUP$A3Parser$stack.elementAt(CUP$A3Parser$top-0)).right, RESULT);
            }
          return CUP$A3Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 25: // Statement ::= ElseStmt 
            {
              Object RESULT = null;

              CUP$A3Parser$result = new java_cup.runtime.Symbol(7/*Statement*/, ((java_cup.runtime.Symbol)CUP$A3Parser$stack.elementAt(CUP$A3Parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$A3Parser$stack.elementAt(CUP$A3Parser$top-0)).right, RESULT);
            }
          return CUP$A3Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 24: // Statement ::= Expression 
            {
              Object RESULT = null;

              CUP$A3Parser$result = new java_cup.runtime.Symbol(7/*Statement*/, ((java_cup.runtime.Symbol)CUP$A3Parser$stack.elementAt(CUP$A3Parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$A3Parser$stack.elementAt(CUP$A3Parser$top-0)).right, RESULT);
            }
          return CUP$A3Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 23: // Statement ::= ReadStmt 
            {
              Object RESULT = null;

              CUP$A3Parser$result = new java_cup.runtime.Symbol(7/*Statement*/, ((java_cup.runtime.Symbol)CUP$A3Parser$stack.elementAt(CUP$A3Parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$A3Parser$stack.elementAt(CUP$A3Parser$top-0)).right, RESULT);
            }
          return CUP$A3Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 22: // Statement ::= WriteStmt 
            {
              Object RESULT = null;

              CUP$A3Parser$result = new java_cup.runtime.Symbol(7/*Statement*/, ((java_cup.runtime.Symbol)CUP$A3Parser$stack.elementAt(CUP$A3Parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$A3Parser$stack.elementAt(CUP$A3Parser$top-0)).right, RESULT);
            }
          return CUP$A3Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 21: // Statement ::= IfStmt 
            {
              Object RESULT = null;

              CUP$A3Parser$result = new java_cup.runtime.Symbol(7/*Statement*/, ((java_cup.runtime.Symbol)CUP$A3Parser$stack.elementAt(CUP$A3Parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$A3Parser$stack.elementAt(CUP$A3Parser$top-0)).right, RESULT);
            }
          return CUP$A3Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 20: // Statement ::= ReturnStmt 
            {
              Object RESULT = null;

              CUP$A3Parser$result = new java_cup.runtime.Symbol(7/*Statement*/, ((java_cup.runtime.Symbol)CUP$A3Parser$stack.elementAt(CUP$A3Parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$A3Parser$stack.elementAt(CUP$A3Parser$top-0)).right, RESULT);
            }
          return CUP$A3Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 19: // Statement ::= AssignStmt 
            {
              Object RESULT = null;

              CUP$A3Parser$result = new java_cup.runtime.Symbol(7/*Statement*/, ((java_cup.runtime.Symbol)CUP$A3Parser$stack.elementAt(CUP$A3Parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$A3Parser$stack.elementAt(CUP$A3Parser$top-0)).right, RESULT);
            }
          return CUP$A3Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 18: // Statement ::= LocalVarDecl 
            {
              Object RESULT = null;

              CUP$A3Parser$result = new java_cup.runtime.Symbol(7/*Statement*/, ((java_cup.runtime.Symbol)CUP$A3Parser$stack.elementAt(CUP$A3Parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$A3Parser$stack.elementAt(CUP$A3Parser$top-0)).right, RESULT);
            }
          return CUP$A3Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 17: // Statement ::= Block 
            {
              Object RESULT = null;

              CUP$A3Parser$result = new java_cup.runtime.Symbol(7/*Statement*/, ((java_cup.runtime.Symbol)CUP$A3Parser$stack.elementAt(CUP$A3Parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$A3Parser$stack.elementAt(CUP$A3Parser$top-0)).right, RESULT);
            }
          return CUP$A3Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 16: // Statements ::= Statement Statements 
            {
              Object RESULT = null;

              CUP$A3Parser$result = new java_cup.runtime.Symbol(8/*Statements*/, ((java_cup.runtime.Symbol)CUP$A3Parser$stack.elementAt(CUP$A3Parser$top-1)).left, ((java_cup.runtime.Symbol)CUP$A3Parser$stack.elementAt(CUP$A3Parser$top-0)).right, RESULT);
            }
          return CUP$A3Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 15: // Statements ::= Statement 
            {
              Object RESULT = null;

              CUP$A3Parser$result = new java_cup.runtime.Symbol(8/*Statements*/, ((java_cup.runtime.Symbol)CUP$A3Parser$stack.elementAt(CUP$A3Parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$A3Parser$stack.elementAt(CUP$A3Parser$top-0)).right, RESULT);
            }
          return CUP$A3Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 14: // Block ::= BEGIN Statement Statements END 
            {
              Object RESULT = null;

              CUP$A3Parser$result = new java_cup.runtime.Symbol(6/*Block*/, ((java_cup.runtime.Symbol)CUP$A3Parser$stack.elementAt(CUP$A3Parser$top-3)).left, ((java_cup.runtime.Symbol)CUP$A3Parser$stack.elementAt(CUP$A3Parser$top-0)).right, RESULT);
            }
          return CUP$A3Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 13: // Block ::= BEGIN Statement END 
            {
              Object RESULT = null;

              CUP$A3Parser$result = new java_cup.runtime.Symbol(6/*Block*/, ((java_cup.runtime.Symbol)CUP$A3Parser$stack.elementAt(CUP$A3Parser$top-2)).left, ((java_cup.runtime.Symbol)CUP$A3Parser$stack.elementAt(CUP$A3Parser$top-0)).right, RESULT);
            }
          return CUP$A3Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 12: // FormalParam ::= Type ID 
            {
              Object RESULT = null;

              CUP$A3Parser$result = new java_cup.runtime.Symbol(4/*FormalParam*/, ((java_cup.runtime.Symbol)CUP$A3Parser$stack.elementAt(CUP$A3Parser$top-1)).left, ((java_cup.runtime.Symbol)CUP$A3Parser$stack.elementAt(CUP$A3Parser$top-0)).right, RESULT);
            }
          return CUP$A3Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 11: // FormalParams ::= FormalParam COMMA FormalParams 
            {
              Object RESULT = null;

              CUP$A3Parser$result = new java_cup.runtime.Symbol(5/*FormalParams*/, ((java_cup.runtime.Symbol)CUP$A3Parser$stack.elementAt(CUP$A3Parser$top-2)).left, ((java_cup.runtime.Symbol)CUP$A3Parser$stack.elementAt(CUP$A3Parser$top-0)).right, RESULT);
            }
          return CUP$A3Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 10: // FormalParams ::= FormalParam 
            {
              Object RESULT = null;

              CUP$A3Parser$result = new java_cup.runtime.Symbol(5/*FormalParams*/, ((java_cup.runtime.Symbol)CUP$A3Parser$stack.elementAt(CUP$A3Parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$A3Parser$stack.elementAt(CUP$A3Parser$top-0)).right, RESULT);
            }
          return CUP$A3Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 9: // Fp ::= FormalParams 
            {
              Object RESULT = null;

              CUP$A3Parser$result = new java_cup.runtime.Symbol(19/*Fp*/, ((java_cup.runtime.Symbol)CUP$A3Parser$stack.elementAt(CUP$A3Parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$A3Parser$stack.elementAt(CUP$A3Parser$top-0)).right, RESULT);
            }
          return CUP$A3Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 8: // Fp ::= 
            {
              Object RESULT = null;

              CUP$A3Parser$result = new java_cup.runtime.Symbol(19/*Fp*/, ((java_cup.runtime.Symbol)CUP$A3Parser$stack.elementAt(CUP$A3Parser$top-0)).right, ((java_cup.runtime.Symbol)CUP$A3Parser$stack.elementAt(CUP$A3Parser$top-0)).right, RESULT);
            }
          return CUP$A3Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 7: // MethodDecl ::= Type ID LBRACK Fp RBRACK Block 
            {
              Object RESULT = null;

              CUP$A3Parser$result = new java_cup.runtime.Symbol(3/*MethodDecl*/, ((java_cup.runtime.Symbol)CUP$A3Parser$stack.elementAt(CUP$A3Parser$top-5)).left, ((java_cup.runtime.Symbol)CUP$A3Parser$stack.elementAt(CUP$A3Parser$top-0)).right, RESULT);
            }
          return CUP$A3Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 6: // MethodDecl ::= Type MAIN ID LBRACK Fp RBRACK Block 
            {
              Object RESULT = null;

              CUP$A3Parser$result = new java_cup.runtime.Symbol(3/*MethodDecl*/, ((java_cup.runtime.Symbol)CUP$A3Parser$stack.elementAt(CUP$A3Parser$top-6)).left, ((java_cup.runtime.Symbol)CUP$A3Parser$stack.elementAt(CUP$A3Parser$top-0)).right, RESULT);
            }
          return CUP$A3Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 5: // Type ::= STRING 
            {
              Object RESULT = null;

              CUP$A3Parser$result = new java_cup.runtime.Symbol(2/*Type*/, ((java_cup.runtime.Symbol)CUP$A3Parser$stack.elementAt(CUP$A3Parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$A3Parser$stack.elementAt(CUP$A3Parser$top-0)).right, RESULT);
            }
          return CUP$A3Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 4: // Type ::= REAL 
            {
              Object RESULT = null;

              CUP$A3Parser$result = new java_cup.runtime.Symbol(2/*Type*/, ((java_cup.runtime.Symbol)CUP$A3Parser$stack.elementAt(CUP$A3Parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$A3Parser$stack.elementAt(CUP$A3Parser$top-0)).right, RESULT);
            }
          return CUP$A3Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 3: // Type ::= INT 
            {
              Object RESULT = null;

              CUP$A3Parser$result = new java_cup.runtime.Symbol(2/*Type*/, ((java_cup.runtime.Symbol)CUP$A3Parser$stack.elementAt(CUP$A3Parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$A3Parser$stack.elementAt(CUP$A3Parser$top-0)).right, RESULT);
            }
          return CUP$A3Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 2: // Program ::= MethodDecl Program 
            {
              Object RESULT = null;

              CUP$A3Parser$result = new java_cup.runtime.Symbol(1/*Program*/, ((java_cup.runtime.Symbol)CUP$A3Parser$stack.elementAt(CUP$A3Parser$top-1)).left, ((java_cup.runtime.Symbol)CUP$A3Parser$stack.elementAt(CUP$A3Parser$top-0)).right, RESULT);
            }
          return CUP$A3Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1: // $START ::= Program EOF 
            {
              Object RESULT = null;
		int start_valleft = ((java_cup.runtime.Symbol)CUP$A3Parser$stack.elementAt(CUP$A3Parser$top-1)).left;
		int start_valright = ((java_cup.runtime.Symbol)CUP$A3Parser$stack.elementAt(CUP$A3Parser$top-1)).right;
		Object start_val = (Object)((java_cup.runtime.Symbol) CUP$A3Parser$stack.elementAt(CUP$A3Parser$top-1)).value;
		RESULT = start_val;
              CUP$A3Parser$result = new java_cup.runtime.Symbol(0/*$START*/, ((java_cup.runtime.Symbol)CUP$A3Parser$stack.elementAt(CUP$A3Parser$top-1)).left, ((java_cup.runtime.Symbol)CUP$A3Parser$stack.elementAt(CUP$A3Parser$top-0)).right, RESULT);
            }
          /* ACCEPT */
          CUP$A3Parser$parser.done_parsing();
          return CUP$A3Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 0: // Program ::= MethodDecl 
            {
              Object RESULT = null;

              CUP$A3Parser$result = new java_cup.runtime.Symbol(1/*Program*/, ((java_cup.runtime.Symbol)CUP$A3Parser$stack.elementAt(CUP$A3Parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$A3Parser$stack.elementAt(CUP$A3Parser$top-0)).right, RESULT);
            }
          return CUP$A3Parser$result;

          /* . . . . . .*/
          default:
            throw new Exception(
               "Invalid action number found in internal parse table");

        }
    }
}

